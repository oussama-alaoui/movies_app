import React, { useImperativeHandle } from 'react';
import { Animated, I18nManager, StyleSheet, TouchableHighlight, View } from 'react-native';
import { IconMaximize, IconMinimize, IconPaly, IconPause, IconStop, IconVolume, IconVolume2, IconSkipBack, IconSkipForward, IconPlayCircle, IconPauseCircle, IconAspectRatio, IconReload } from '../assets/icons';
import IconButton from './IconButton';
import { formatTime } from '../utils/StringUtil';
import SeekBar from './SeekBar';
import SlideButton from './SlideButton';
import GradientView from './GradientView';
import { getAlphaColor } from '../utils/ColorUtil';
import TimeTagView from './TimeTagView';
import VolumeTagView from './VolumeTagView';
const FooterControl = /*#__PURE__*/React.forwardRef((props, ref) => {
  var _nexenTheme$sizes, _nexenTheme$colors, _nexenTheme$sizes2, _nexenTheme$sizes3, _nexenTheme$sizes4, _nexenTheme$sizes5, _nexenTheme$tagView;

  const {
    opacity,
    marginBottom,
    paused,
    fullScreen,
    locked,
    insets,
    playerConfig,
    nexenTheme,
    trackTime,
    cachedTrackTime,
    totalTrackTime,
    totalVolume,
    isSeekable,
    isVolumeSeekable,
    disablePlaylistAndSkip,
    onPlayPress,
    onFullScreenPress,
    onVolumePress,
    onStopPress,
    onReloadPress,
    onSeekStart,
    onSeekUpdate,
    onSeekEnd,
    onVolumeSeekStart,
    onVolumeSeekUpdate,
    onVolumeSeekEnd,
    onSlideStart,
    onSlideEnd,
    onReachedToStart,
    onReachedToEnd,
    onSkipNext,
    onSkipBack,
    onAspectRatioPress
  } = props;
  const isRTL = I18nManager.isRTL;
  const iconTagViewRef = React.useRef(null);
  const ICON_SIZE_FACTOR = (playerConfig === null || playerConfig === void 0 ? void 0 : playerConfig.layoutMode) === 'advanced' ? 1.8 : 1;
  const ICON_SIZE = nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$sizes = nexenTheme.sizes) === null || _nexenTheme$sizes === void 0 ? void 0 : _nexenTheme$sizes.primaryIconSize;
  const ICON_COLOR = nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$colors = nexenTheme.colors) === null || _nexenTheme$colors === void 0 ? void 0 : _nexenTheme$colors.primaryIconColor;
  const CONTAINER_VERTICAL_PADDING = fullScreen ? (insets === null || insets === void 0 ? void 0 : insets.bottom) > 0 ? insets === null || insets === void 0 ? void 0 : insets.bottom : nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$sizes2 = nexenTheme.sizes) === null || _nexenTheme$sizes2 === void 0 ? void 0 : _nexenTheme$sizes2.paddingVertical : nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$sizes3 = nexenTheme.sizes) === null || _nexenTheme$sizes3 === void 0 ? void 0 : _nexenTheme$sizes3.paddingVertical;
  const CONTAINER_HORIZONTAL_PADDING = fullScreen ? ((insets === null || insets === void 0 ? void 0 : insets.left) + (insets === null || insets === void 0 ? void 0 : insets.right)) / 2 > 0 ? ((insets === null || insets === void 0 ? void 0 : insets.left) + (insets === null || insets === void 0 ? void 0 : insets.right)) / 2 : nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$sizes4 = nexenTheme.sizes) === null || _nexenTheme$sizes4 === void 0 ? void 0 : _nexenTheme$sizes4.paddingHorizontal : nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$sizes5 = nexenTheme.sizes) === null || _nexenTheme$sizes5 === void 0 ? void 0 : _nexenTheme$sizes5.paddingHorizontal;
  const TAG_VIEW_HEIGHT = nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$tagView = nexenTheme.tagView) === null || _nexenTheme$tagView === void 0 ? void 0 : _nexenTheme$tagView.height;
  const CONTAINER_HEIGHT = locked ? ICON_SIZE * ICON_SIZE_FACTOR + 10 * 2 + TAG_VIEW_HEIGHT + CONTAINER_VERTICAL_PADDING + 8 : ICON_SIZE * ICON_SIZE_FACTOR + 10 * 2 + TAG_VIEW_HEIGHT + CONTAINER_VERTICAL_PADDING;
  useImperativeHandle(ref, () => ({
    updateIconTagView: newState => {
      var _iconTagViewRef$curre;

      (_iconTagViewRef$curre = iconTagViewRef.current) === null || _iconTagViewRef$curre === void 0 ? void 0 : _iconTagViewRef$curre.updateState(newState);
    }
  }));
  const seekBarTheme = React.useMemo(() => {
    var _nexenTheme$trackSeek, _nexenTheme$colors2, _nexenTheme$trackSeek2, _nexenTheme$colors3, _nexenTheme$trackSeek3, _nexenTheme$colors4, _nexenTheme$trackSeek4, _nexenTheme$colors5, _nexenTheme$trackSeek5, _nexenTheme$colors6, _nexenTheme$trackSeek6, _nexenTheme$trackSeek7, _nexenTheme$trackSeek8, _nexenTheme$trackSeek9, _nexenTheme$trackSeek10;

    return {
      trackColor: (nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$trackSeek = nexenTheme.trackSeekBar) === null || _nexenTheme$trackSeek === void 0 ? void 0 : _nexenTheme$trackSeek.trackColor) || (nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$colors2 = nexenTheme.colors) === null || _nexenTheme$colors2 === void 0 ? void 0 : _nexenTheme$colors2.accentColor),
      cachedTrackColor: (nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$trackSeek2 = nexenTheme.trackSeekBar) === null || _nexenTheme$trackSeek2 === void 0 ? void 0 : _nexenTheme$trackSeek2.cachedTrackColor) || (nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$colors3 = nexenTheme.colors) === null || _nexenTheme$colors3 === void 0 ? void 0 : _nexenTheme$colors3.secondaryColor),
      totalTrackColor: (nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$trackSeek3 = nexenTheme.trackSeekBar) === null || _nexenTheme$trackSeek3 === void 0 ? void 0 : _nexenTheme$trackSeek3.totalTrackColor) || getAlphaColor(nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$colors4 = nexenTheme.colors) === null || _nexenTheme$colors4 === void 0 ? void 0 : _nexenTheme$colors4.secondaryColor, 0.3),
      thumbColor: (nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$trackSeek4 = nexenTheme.trackSeekBar) === null || _nexenTheme$trackSeek4 === void 0 ? void 0 : _nexenTheme$trackSeek4.thumbColor) || (nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$colors5 = nexenTheme.colors) === null || _nexenTheme$colors5 === void 0 ? void 0 : _nexenTheme$colors5.accentColor),
      thumbBorderColor: (nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$trackSeek5 = nexenTheme.trackSeekBar) === null || _nexenTheme$trackSeek5 === void 0 ? void 0 : _nexenTheme$trackSeek5.thumbBorderColor) || getAlphaColor(nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$colors6 = nexenTheme.colors) === null || _nexenTheme$colors6 === void 0 ? void 0 : _nexenTheme$colors6.secondaryColor, 0.7),
      trackHeight: nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$trackSeek6 = nexenTheme.trackSeekBar) === null || _nexenTheme$trackSeek6 === void 0 ? void 0 : _nexenTheme$trackSeek6.trackHeight,
      thumbSize: nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$trackSeek7 = nexenTheme.trackSeekBar) === null || _nexenTheme$trackSeek7 === void 0 ? void 0 : _nexenTheme$trackSeek7.thumbSize,
      thumbBorderWidth: nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$trackSeek8 = nexenTheme.trackSeekBar) === null || _nexenTheme$trackSeek8 === void 0 ? void 0 : _nexenTheme$trackSeek8.thumbBorderWidth,
      thumbCornerRadius: nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$trackSeek9 = nexenTheme.trackSeekBar) === null || _nexenTheme$trackSeek9 === void 0 ? void 0 : _nexenTheme$trackSeek9.thumbCornerRadius,
      thumbBorderCornerRadius: nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$trackSeek10 = nexenTheme.trackSeekBar) === null || _nexenTheme$trackSeek10 === void 0 ? void 0 : _nexenTheme$trackSeek10.thumbBorderCornerRadius
    };
  }, [nexenTheme, fullScreen]);
  const volumeSeekBarTheme = React.useMemo(() => {
    var _nexenTheme$miniSeekB, _nexenTheme$colors7, _nexenTheme$miniSeekB2, _nexenTheme$colors8, _nexenTheme$miniSeekB3, _nexenTheme$colors9, _nexenTheme$tagView2, _nexenTheme$colors10, _nexenTheme$colors11, _nexenTheme$sizes6, _nexenTheme$tagView3, _nexenTheme$tagView4, _nexenTheme$tagView5, _nexenTheme$miniSeekB4, _nexenTheme$miniSeekB5, _nexenTheme$miniSeekB6;

    return {
      barColor: playerConfig !== null && playerConfig !== void 0 && playerConfig.muted ? '#414141' : (nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$miniSeekB = nexenTheme.miniSeekBar) === null || _nexenTheme$miniSeekB === void 0 ? void 0 : _nexenTheme$miniSeekB.barColor) || getAlphaColor(nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$colors7 = nexenTheme.colors) === null || _nexenTheme$colors7 === void 0 ? void 0 : _nexenTheme$colors7.secondaryColor, 0.7),
      underlayColor: playerConfig !== null && playerConfig !== void 0 && playerConfig.muted ? '#919191' : (nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$miniSeekB2 = nexenTheme.miniSeekBar) === null || _nexenTheme$miniSeekB2 === void 0 ? void 0 : _nexenTheme$miniSeekB2.underlayColor) || getAlphaColor(nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$colors8 = nexenTheme.colors) === null || _nexenTheme$colors8 === void 0 ? void 0 : _nexenTheme$colors8.primaryColor, 0.3),
      thumbColor: playerConfig !== null && playerConfig !== void 0 && playerConfig.muted ? '#313131' : (nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$miniSeekB3 = nexenTheme.miniSeekBar) === null || _nexenTheme$miniSeekB3 === void 0 ? void 0 : _nexenTheme$miniSeekB3.thumbColor) || (nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$colors9 = nexenTheme.colors) === null || _nexenTheme$colors9 === void 0 ? void 0 : _nexenTheme$colors9.accentColor),
      borderColor: (nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$tagView2 = nexenTheme.tagView) === null || _nexenTheme$tagView2 === void 0 ? void 0 : _nexenTheme$tagView2.borderColor) || getAlphaColor(nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$colors10 = nexenTheme.colors) === null || _nexenTheme$colors10 === void 0 ? void 0 : _nexenTheme$colors10.accentColor, 0.7),
      iconColor: nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$colors11 = nexenTheme.colors) === null || _nexenTheme$colors11 === void 0 ? void 0 : _nexenTheme$colors11.primaryIconColor,
      iconSize: nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$sizes6 = nexenTheme.sizes) === null || _nexenTheme$sizes6 === void 0 ? void 0 : _nexenTheme$sizes6.primaryIconSize,
      height: nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$tagView3 = nexenTheme.tagView) === null || _nexenTheme$tagView3 === void 0 ? void 0 : _nexenTheme$tagView3.height,
      cornerRadius: nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$tagView4 = nexenTheme.tagView) === null || _nexenTheme$tagView4 === void 0 ? void 0 : _nexenTheme$tagView4.cornerRadius,
      borderWidth: nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$tagView5 = nexenTheme.tagView) === null || _nexenTheme$tagView5 === void 0 ? void 0 : _nexenTheme$tagView5.borderWidth,
      trackHeight: nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$miniSeekB4 = nexenTheme.miniSeekBar) === null || _nexenTheme$miniSeekB4 === void 0 ? void 0 : _nexenTheme$miniSeekB4.trackHeight,
      thumbSize: nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$miniSeekB5 = nexenTheme.miniSeekBar) === null || _nexenTheme$miniSeekB5 === void 0 ? void 0 : _nexenTheme$miniSeekB5.thumbSize,
      thumbCornerRadius: nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$miniSeekB6 = nexenTheme.miniSeekBar) === null || _nexenTheme$miniSeekB6 === void 0 ? void 0 : _nexenTheme$miniSeekB6.thumbCornerRadius
    };
  }, [nexenTheme, fullScreen, playerConfig]);
  const timeTagViewTheme = React.useMemo(() => {
    var _nexenTheme$fonts, _nexenTheme$tagView6, _nexenTheme$tagView7, _nexenTheme$tagView8, _nexenTheme$tagView9, _nexenTheme$tagView10, _nexenTheme$tagView11, _nexenTheme$colors12, _nexenTheme$tagView12, _nexenTheme$colors13, _nexenTheme$tagView13, _nexenTheme$colors14;

    return {
      font: nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$fonts = nexenTheme.fonts) === null || _nexenTheme$fonts === void 0 ? void 0 : _nexenTheme$fonts.secondaryFont,
      height: nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$tagView6 = nexenTheme.tagView) === null || _nexenTheme$tagView6 === void 0 ? void 0 : _nexenTheme$tagView6.height,
      cornerRadius: nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$tagView7 = nexenTheme.tagView) === null || _nexenTheme$tagView7 === void 0 ? void 0 : _nexenTheme$tagView7.cornerRadius,
      borderWidth: nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$tagView8 = nexenTheme.tagView) === null || _nexenTheme$tagView8 === void 0 ? void 0 : _nexenTheme$tagView8.borderWidth,
      textSize: nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$tagView9 = nexenTheme.tagView) === null || _nexenTheme$tagView9 === void 0 ? void 0 : _nexenTheme$tagView9.textSize,
      textLineHeight: nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$tagView10 = nexenTheme.tagView) === null || _nexenTheme$tagView10 === void 0 ? void 0 : _nexenTheme$tagView10.textLineHeight,
      textColor: (nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$tagView11 = nexenTheme.tagView) === null || _nexenTheme$tagView11 === void 0 ? void 0 : _nexenTheme$tagView11.textColor) || (nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$colors12 = nexenTheme.colors) === null || _nexenTheme$colors12 === void 0 ? void 0 : _nexenTheme$colors12.secondaryTextColor),
      borderColor: (nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$tagView12 = nexenTheme.tagView) === null || _nexenTheme$tagView12 === void 0 ? void 0 : _nexenTheme$tagView12.borderColor) || getAlphaColor(nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$colors13 = nexenTheme.colors) === null || _nexenTheme$colors13 === void 0 ? void 0 : _nexenTheme$colors13.secondaryColor, 0.3),
      backgroundColor: (nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$tagView13 = nexenTheme.tagView) === null || _nexenTheme$tagView13 === void 0 ? void 0 : _nexenTheme$tagView13.backgroundColor) || getAlphaColor(nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$colors14 = nexenTheme.colors) === null || _nexenTheme$colors14 === void 0 ? void 0 : _nexenTheme$colors14.primaryColor, 0.0)
    };
  }, [nexenTheme, fullScreen]);
  const slideButtonTheme = React.useMemo(() => {
    var _nexenTheme$fonts2, _nexenTheme$lockButto, _nexenTheme$colors15, _nexenTheme$lockButto2, _nexenTheme$colors16, _nexenTheme$lockButto3, _nexenTheme$colors17, _nexenTheme$lockButto4, _nexenTheme$colors18, _nexenTheme$lockButto5, _nexenTheme$colors19, _nexenTheme$lockButto6, _nexenTheme$lockButto7, _nexenTheme$lockButto8, _nexenTheme$lockButto9, _nexenTheme$lockButto10;

    return {
      font: nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$fonts2 = nexenTheme.fonts) === null || _nexenTheme$fonts2 === void 0 ? void 0 : _nexenTheme$fonts2.secondaryFont,
      containerColor: (nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$lockButto = nexenTheme.lockButton) === null || _nexenTheme$lockButto === void 0 ? void 0 : _nexenTheme$lockButto.containerColor) || getAlphaColor(nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$colors15 = nexenTheme.colors) === null || _nexenTheme$colors15 === void 0 ? void 0 : _nexenTheme$colors15.primaryColor, 0.7),
      underlayColor: (nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$lockButto2 = nexenTheme.lockButton) === null || _nexenTheme$lockButto2 === void 0 ? void 0 : _nexenTheme$lockButto2.underlayColor) || getAlphaColor(nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$colors16 = nexenTheme.colors) === null || _nexenTheme$colors16 === void 0 ? void 0 : _nexenTheme$colors16.secondaryColor, 0.15),
      thumbColor: (nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$lockButto3 = nexenTheme.lockButton) === null || _nexenTheme$lockButto3 === void 0 ? void 0 : _nexenTheme$lockButto3.thumbColor) || (nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$colors17 = nexenTheme.colors) === null || _nexenTheme$colors17 === void 0 ? void 0 : _nexenTheme$colors17.secondaryColor),
      thumbIconColor: (nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$lockButto4 = nexenTheme.lockButton) === null || _nexenTheme$lockButto4 === void 0 ? void 0 : _nexenTheme$lockButto4.thumbIconColor) || (nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$colors18 = nexenTheme.colors) === null || _nexenTheme$colors18 === void 0 ? void 0 : _nexenTheme$colors18.accentColor),
      textColor: (nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$lockButto5 = nexenTheme.lockButton) === null || _nexenTheme$lockButto5 === void 0 ? void 0 : _nexenTheme$lockButto5.textColor) || (nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$colors19 = nexenTheme.colors) === null || _nexenTheme$colors19 === void 0 ? void 0 : _nexenTheme$colors19.primaryTextColor),
      thumbHeight: nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$lockButto6 = nexenTheme.lockButton) === null || _nexenTheme$lockButto6 === void 0 ? void 0 : _nexenTheme$lockButto6.thumbHeight,
      thumbWidth: nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$lockButto7 = nexenTheme.lockButton) === null || _nexenTheme$lockButto7 === void 0 ? void 0 : _nexenTheme$lockButto7.thumbWidth,
      thumbCornerRadius: nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$lockButto8 = nexenTheme.lockButton) === null || _nexenTheme$lockButto8 === void 0 ? void 0 : _nexenTheme$lockButto8.thumbCornerRadius,
      thumbIconSize: nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$lockButto9 = nexenTheme.lockButton) === null || _nexenTheme$lockButto9 === void 0 ? void 0 : _nexenTheme$lockButto9.thumbIconSize,
      textSize: nexenTheme === null || nexenTheme === void 0 ? void 0 : (_nexenTheme$lockButto10 = nexenTheme.lockButton) === null || _nexenTheme$lockButto10 === void 0 ? void 0 : _nexenTheme$lockButto10.textSize,
      padding: 3
    };
  }, [nexenTheme, fullScreen]);

  const renderBasicLayout = () => {
    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(View, {
      style: styles.iconButtonContainer
    }, /*#__PURE__*/React.createElement(IconButton, {
      style: {
        transform: [{
          scaleX: isRTL ? -1 : 1
        }]
      },
      onPress: onPlayPress
    }, paused ? /*#__PURE__*/React.createElement(IconPaly, {
      size: ICON_SIZE,
      color: ICON_COLOR
    }) : /*#__PURE__*/React.createElement(IconPause, {
      size: ICON_SIZE,
      color: ICON_COLOR
    })), !(playerConfig !== null && playerConfig !== void 0 && playerConfig.disableStop) && /*#__PURE__*/React.createElement(IconButton, {
      onPress: onStopPress
    }, /*#__PURE__*/React.createElement(IconStop, {
      size: ICON_SIZE,
      color: ICON_COLOR
    })), !(playerConfig !== null && playerConfig !== void 0 && playerConfig.disableReload) && /*#__PURE__*/React.createElement(IconButton, {
      onPress: onReloadPress
    }, /*#__PURE__*/React.createElement(IconReload, {
      size: ICON_SIZE,
      color: ICON_COLOR
    }))), /*#__PURE__*/React.createElement(View, {
      style: styles.iconButtonContainer
    }, !(playerConfig !== null && playerConfig !== void 0 && playerConfig.disableVolume) && /*#__PURE__*/React.createElement(IconButton, {
      onPress: onVolumePress
    }, playerConfig !== null && playerConfig !== void 0 && playerConfig.muted ? /*#__PURE__*/React.createElement(IconVolume, {
      size: ICON_SIZE,
      color: ICON_COLOR
    }) : /*#__PURE__*/React.createElement(IconVolume2, {
      size: ICON_SIZE,
      color: ICON_COLOR
    })), !(playerConfig !== null && playerConfig !== void 0 && playerConfig.disableFullscreen) && /*#__PURE__*/React.createElement(IconButton, {
      onPress: onFullScreenPress
    }, fullScreen ? /*#__PURE__*/React.createElement(IconMinimize, {
      size: ICON_SIZE,
      color: ICON_COLOR
    }) : /*#__PURE__*/React.createElement(IconMaximize, {
      size: ICON_SIZE,
      color: ICON_COLOR
    }))));
  };

  const renderIntermediateLayout = () => {
    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(View, {
      style: styles.iconButtonContainer
    }, !disablePlaylistAndSkip && !(playerConfig !== null && playerConfig !== void 0 && playerConfig.disableSkip) && /*#__PURE__*/React.createElement(IconButton, {
      style: {
        transform: [{
          scaleX: isRTL ? -1 : 1
        }]
      },
      onPress: onSkipBack
    }, /*#__PURE__*/React.createElement(IconSkipBack, {
      size: ICON_SIZE,
      color: ICON_COLOR
    })), /*#__PURE__*/React.createElement(IconButton, {
      style: {
        transform: [{
          scaleX: isRTL ? -1 : 1
        }]
      },
      onPress: onPlayPress
    }, paused ? /*#__PURE__*/React.createElement(IconPaly, {
      size: ICON_SIZE,
      color: ICON_COLOR
    }) : /*#__PURE__*/React.createElement(IconPause, {
      size: ICON_SIZE,
      color: ICON_COLOR
    })), !(playerConfig !== null && playerConfig !== void 0 && playerConfig.disableStop) && /*#__PURE__*/React.createElement(IconButton, {
      onPress: onStopPress
    }, /*#__PURE__*/React.createElement(IconStop, {
      size: ICON_SIZE,
      color: ICON_COLOR
    })), !disablePlaylistAndSkip && !(playerConfig !== null && playerConfig !== void 0 && playerConfig.disableSkip) && /*#__PURE__*/React.createElement(IconButton, {
      style: {
        transform: [{
          scaleX: isRTL ? -1 : 1
        }]
      },
      onPress: onSkipNext
    }, /*#__PURE__*/React.createElement(IconSkipForward, {
      size: ICON_SIZE,
      color: ICON_COLOR
    })), !(playerConfig !== null && playerConfig !== void 0 && playerConfig.disableReload) && /*#__PURE__*/React.createElement(IconButton, {
      onPress: onReloadPress
    }, /*#__PURE__*/React.createElement(IconReload, {
      size: ICON_SIZE,
      color: ICON_COLOR
    }))), /*#__PURE__*/React.createElement(View, {
      style: styles.iconButtonContainer
    }, !(playerConfig !== null && playerConfig !== void 0 && playerConfig.disableVolume) && /*#__PURE__*/React.createElement(VolumeTagView, {
      volume: playerConfig === null || playerConfig === void 0 ? void 0 : playerConfig.volume,
      totalVolume: totalVolume,
      muted: playerConfig === null || playerConfig === void 0 ? void 0 : playerConfig.muted,
      isSeekable: isVolumeSeekable,
      theme: volumeSeekBarTheme,
      onVolumeSeekStart: onVolumeSeekStart,
      onVolumeSeekUpdate: onVolumeSeekUpdate,
      onVolumeSeekEnd: onVolumeSeekEnd,
      onVolumePress: onVolumePress
    }), !(playerConfig !== null && playerConfig !== void 0 && playerConfig.disableFullscreen) && /*#__PURE__*/React.createElement(IconButton, {
      onPress: onFullScreenPress
    }, fullScreen ? /*#__PURE__*/React.createElement(IconMinimize, {
      size: ICON_SIZE,
      color: ICON_COLOR
    }) : /*#__PURE__*/React.createElement(IconMaximize, {
      size: ICON_SIZE,
      color: ICON_COLOR
    }))));
  };

  const renderAdvancedLayout = () => {
    return /*#__PURE__*/React.createElement(View, {
      style: styles.iconButtonContainer
    }, /*#__PURE__*/React.createElement(View, {
      style: {
        flex: 1,
        flexDirection: 'row',
        justifyContent: 'flex-start',
        alignItems: 'center'
      }
    }, !(playerConfig !== null && playerConfig !== void 0 && playerConfig.disableResizeMode) && !locked && /*#__PURE__*/React.createElement(IconButton, {
      onPress: onAspectRatioPress
    }, /*#__PURE__*/React.createElement(IconAspectRatio, {
      size: ICON_SIZE,
      color: ICON_COLOR
    }))), /*#__PURE__*/React.createElement(View, {
      style: {
        flex: 1,
        flexDirection: 'row',
        justifyContent: 'center',
        alignItems: 'center'
      }
    }, !disablePlaylistAndSkip && !(playerConfig !== null && playerConfig !== void 0 && playerConfig.disableSkip) && /*#__PURE__*/React.createElement(IconButton, {
      style: {
        transform: [{
          scaleX: isRTL ? -1 : 1
        }]
      },
      onPress: onSkipBack
    }, /*#__PURE__*/React.createElement(IconSkipBack, {
      size: ICON_SIZE,
      color: ICON_COLOR
    })), /*#__PURE__*/React.createElement(IconButton, {
      style: {
        transform: [{
          scaleX: isRTL ? -1 : 1
        }]
      },
      onPress: onPlayPress
    }, paused ? /*#__PURE__*/React.createElement(IconPlayCircle, {
      size: ICON_SIZE * ICON_SIZE_FACTOR,
      color: ICON_COLOR
    }) : /*#__PURE__*/React.createElement(IconPauseCircle, {
      size: ICON_SIZE * ICON_SIZE_FACTOR,
      color: ICON_COLOR
    })), !disablePlaylistAndSkip && !(playerConfig !== null && playerConfig !== void 0 && playerConfig.disableSkip) && /*#__PURE__*/React.createElement(IconButton, {
      style: {
        transform: [{
          scaleX: isRTL ? -1 : 1
        }]
      },
      onPress: onSkipNext
    }, /*#__PURE__*/React.createElement(IconSkipForward, {
      size: ICON_SIZE,
      color: ICON_COLOR
    }))), /*#__PURE__*/React.createElement(View, {
      style: {
        flex: 1,
        flexDirection: 'row',
        justifyContent: 'flex-end',
        alignItems: 'center'
      }
    }, !(playerConfig !== null && playerConfig !== void 0 && playerConfig.disableFullscreen) && /*#__PURE__*/React.createElement(IconButton, {
      onPress: onFullScreenPress
    }, fullScreen ? /*#__PURE__*/React.createElement(IconMinimize, {
      size: ICON_SIZE,
      color: ICON_COLOR
    }) : /*#__PURE__*/React.createElement(IconMaximize, {
      size: ICON_SIZE,
      color: ICON_COLOR
    }))));
  };

  return /*#__PURE__*/React.createElement(Animated.View, {
    style: [styles.container, {
      height: CONTAINER_HEIGHT
    }, {
      opacity,
      marginBottom
    }]
  }, /*#__PURE__*/React.createElement(GradientView, {
    style: {
      height: '100%',
      width: '100%'
    },
    startOpacity: 0.0,
    middleOpacity: 0.2,
    endOpacity: 0.5
  }), /*#__PURE__*/React.createElement(TouchableHighlight, {
    style: [styles.innerContainer, {
      paddingBottom: CONTAINER_VERTICAL_PADDING,
      paddingHorizontal: CONTAINER_HORIZONTAL_PADDING
    }]
  }, /*#__PURE__*/React.createElement(View, {
    style: {
      flex: 1,
      justifyContent: 'space-between'
    }
  }, /*#__PURE__*/React.createElement(View, {
    style: styles.seekbarContainer
  }, /*#__PURE__*/React.createElement(TimeTagView, {
    timeText: formatTime(trackTime),
    theme: timeTagViewTheme
  }), /*#__PURE__*/React.createElement(SeekBar, {
    style: styles.trackSeekbar,
    trackValue: trackTime,
    cachedTrackValue: cachedTrackTime,
    totalTrackValue: totalTrackTime,
    isSeekable: isSeekable,
    theme: seekBarTheme,
    onSeekStart: onSeekStart,
    onSeekUpdate: onSeekUpdate,
    onSeekEnd: onSeekEnd
  }), /*#__PURE__*/React.createElement(TimeTagView, {
    timeText: formatTime(totalTrackTime),
    theme: timeTagViewTheme
  })), locked ? /*#__PURE__*/React.createElement(View, {
    style: styles.lockedViewContainer
  }, /*#__PURE__*/React.createElement(View, {
    style: styles.slideButtonContainer
  }, /*#__PURE__*/React.createElement(SlideButton, {
    theme: slideButtonTheme,
    onSlideStart: onSlideStart,
    onSlideEnd: onSlideEnd,
    onReachedToStart: onReachedToStart,
    onReachedToEnd: onReachedToEnd
  }))) : /*#__PURE__*/React.createElement(View, {
    style: styles.unlockedViewContainer
  }, (playerConfig === null || playerConfig === void 0 ? void 0 : playerConfig.layoutMode) === 'basic' && renderBasicLayout(), (playerConfig === null || playerConfig === void 0 ? void 0 : playerConfig.layoutMode) === 'intermediate' && renderIntermediateLayout(), (playerConfig === null || playerConfig === void 0 ? void 0 : playerConfig.layoutMode) === 'advanced' && renderAdvancedLayout()))));
});
export default /*#__PURE__*/React.memo(FooterControl);
FooterControl.defaultProps = {};
const styles = StyleSheet.create({
  container: {
    position: 'absolute',
    left: 0,
    right: 0,
    bottom: 0,
    height: 68,
    minHeight: 68,
    zIndex: 100
  },
  innerContainer: {
    position: 'absolute',
    left: 0,
    top: 0,
    right: 0,
    bottom: 0,
    flexDirection: 'row'
  },
  iconButtonContainer: {
    flexDirection: 'row',
    alignItems: 'center'
  },
  lockedViewContainer: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
    paddingHorizontal: 8
  },
  unlockedViewContainer: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center'
  },
  seekbarContainer: {
    flexDirection: 'row',
    justifyContent: 'center',
    alignItems: 'center',
    paddingHorizontal: 12
  },
  trackSeekbar: {
    marginHorizontal: 4
  },
  slideButtonContainer: {
    flex: 1,
    padding: 8
  }
});
//# sourceMappingURL=FooterControl.js.map