import React, { useImperativeHandle } from 'react';
import { StyleSheet, View } from 'react-native';
import { IconRepeat, IconSun1, IconVolume, IconZap } from '../assets/icons';
const IconTagView = /*#__PURE__*/React.forwardRef((props, ref) => {
  const {
    theme,
    style
  } = props;
  const [state, setState] = React.useState({
    volumeIcon: /*#__PURE__*/React.createElement(IconVolume, {
      size: theme === null || theme === void 0 ? void 0 : theme.iconSize,
      color: theme === null || theme === void 0 ? void 0 : theme.iconColor
    }),
    brightnessIcon: /*#__PURE__*/React.createElement(IconSun1, {
      size: theme === null || theme === void 0 ? void 0 : theme.iconSize,
      color: theme === null || theme === void 0 ? void 0 : theme.iconColor
    }),
    repeatIcon: /*#__PURE__*/React.createElement(IconRepeat, {
      size: theme === null || theme === void 0 ? void 0 : theme.iconSize,
      color: theme === null || theme === void 0 ? void 0 : theme.inactiveIconColor
    }),
    speedIcon: /*#__PURE__*/React.createElement(IconZap, {
      size: theme === null || theme === void 0 ? void 0 : theme.iconSize,
      color: theme === null || theme === void 0 ? void 0 : theme.inactiveIconColor
    })
  });
  useImperativeHandle(ref, () => ({
    updateState: newState => {
      setState({ ...state,
        ...newState
      });
    }
  }));
  const containerStyle = {
    height: theme === null || theme === void 0 ? void 0 : theme.height,
    borderRadius: theme === null || theme === void 0 ? void 0 : theme.cornerRadius,
    borderWidth: theme === null || theme === void 0 ? void 0 : theme.borderWidth,
    borderColor: theme === null || theme === void 0 ? void 0 : theme.borderColor,
    backgroundColor: theme === null || theme === void 0 ? void 0 : theme.backgroundColor
  };
  return /*#__PURE__*/React.createElement(View, {
    style: [styles.container, containerStyle, style]
  }, /*#__PURE__*/React.createElement(View, {
    style: styles.iconContainer
  }, state.volumeIcon), /*#__PURE__*/React.createElement(View, {
    style: styles.iconContainer
  }, state.brightnessIcon), /*#__PURE__*/React.createElement(View, {
    style: styles.iconContainer
  }, state.repeatIcon), /*#__PURE__*/React.createElement(View, {
    style: styles.iconContainer
  }, state.speedIcon));
});
export default IconTagView;
const styles = StyleSheet.create({
  container: {
    flexDirection: 'row',
    height: 18,
    borderRadius: 9,
    borderWidth: 1,
    justifyContent: 'center',
    alignItems: 'center',
    paddingHorizontal: 4
  },
  iconContainer: {
    paddingHorizontal: 2,
    opacity: 0.8
  }
});
//# sourceMappingURL=IconTagView.js.map