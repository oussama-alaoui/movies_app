import React from 'react';
import { Animated, Easing, StyleSheet, Text, View } from 'react-native';
import { IconLoader } from '../assets/icons';
import ModalView from './ModalView';

const Loader = props => {
  const {
    theme,
    style
  } = props;
  const spinValue = React.useRef(new Animated.Value(0)).current;
  const spinAnim = spinValue.interpolate({
    inputRange: [0, 1],
    outputRange: ['0deg', '360deg']
  });
  React.useEffect(() => {
    const anim = Animated.loop(Animated.timing(spinValue, {
      toValue: 1,
      duration: 1600,
      easing: Easing.linear,
      useNativeDriver: true
    }));
    anim.start();
    return () => anim.stop();
  }, []);
  return /*#__PURE__*/React.createElement(ModalView, {
    style: style
  }, /*#__PURE__*/React.createElement(Animated.View, {
    style: {
      transform: [{
        rotate: spinAnim
      }]
    }
  }, props.loaderIcon ? props.loaderIcon : /*#__PURE__*/React.createElement(IconLoader, {
    size: theme === null || theme === void 0 ? void 0 : theme.iconSize,
    color: theme === null || theme === void 0 ? void 0 : theme.iconColor
  })), /*#__PURE__*/React.createElement(View, null, /*#__PURE__*/React.createElement(Text, {
    style: [styles.text, {
      color: theme === null || theme === void 0 ? void 0 : theme.textColor,
      fontSize: theme === null || theme === void 0 ? void 0 : theme.textSize
    }]
  }, props.loaderText)));
};

export default /*#__PURE__*/React.memo(Loader);
const styles = StyleSheet.create({
  container: {
    position: 'absolute',
    justifyContent: 'center',
    alignItems: 'center',
    paddingHorizontal: 16,
    paddingVertical: 12
  },
  text: {
    marginTop: 5
  }
});
//# sourceMappingURL=Loader.js.map