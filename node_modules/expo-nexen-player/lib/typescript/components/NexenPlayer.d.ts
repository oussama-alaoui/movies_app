import React from 'react';
import { StyleProp, ViewStyle } from 'react-native';
import { NexenTheme } from '../utils/Theme';
import { AVPlaybackSource } from 'expo-av';
export declare type EdgeInsets = {
    top: number;
    right: number;
    bottom: number;
    left: number;
};
export declare type LayoutMode = 'basic' | 'intermediate' | 'advanced';
export declare type ControlHideMode = 'auto' | 'touch';
export declare type Dimension = {
    width: number;
    height: number;
};
export declare type ResizeMode = 'stretch' | 'contain' | 'cover' | undefined;
export declare type PlaybackSpeed = '0.25' | '0.5' | '0.75' | '1.0' | '1.5' | '2.0' | '3.0';
export declare type PlayList = {
    items?: PlayListItem[];
    currentIndex?: number;
};
export declare type PlayListItem = {
    itemSource: NexenSource;
};
export declare type NexenPlayerRef = {
    play: () => void;
    pause: () => void;
    stop: () => void;
    skipNext: () => void;
    skipBack: () => void;
    reload: (callback?: () => void) => void;
    load: (index: number, callback?: () => void) => void;
    setFullScreenMode: (fullScreen: boolean) => void;
};
export declare type NexenSource = {
    source: AVPlaybackSource;
    title?: string;
    poster?: string | undefined;
};
export declare type NexenConfig = {
    loaderText?: string;
    errorText?: string;
    doubleTapTime?: number;
    controlTimeout?: number;
    controlHideMode?: ControlHideMode;
    layoutMode?: LayoutMode;
    posterResizeMode?: ResizeMode;
    resizeMode?: ResizeMode;
    volume?: number;
    brightness?: number;
    playbackSpeed?: PlaybackSpeed;
    muted?: boolean;
    repeat?: boolean;
    autoPlay?: boolean;
    index?: number;
    activeIndex?: number;
    optimize?: boolean;
    disableOnScreenPlayButton?: boolean;
    disableBack?: boolean;
    disableResizeMode?: boolean;
    disableReload?: boolean;
    disableVolume?: boolean;
    disableMore?: boolean;
    disableSkip?: boolean;
    disableStop?: boolean;
    disableFullscreen?: boolean;
    disablePlayList?: boolean;
};
export declare type NexenPlayerProps = {
    source: NexenSource;
    config?: NexenConfig;
    playList?: PlayList;
    style?: StyleProp<ViewStyle>;
    theme?: NexenTheme;
    insets?: EdgeInsets;
    onBackPress?: () => void;
    onFullScreenModeUpdate?: (fullScreen: boolean, index?: number) => void;
    onPlay?: (index?: number) => void;
    onPause?: (index?: number) => void;
    onStop?: (index?: number) => void;
    onSkipNext?: (index: number) => void;
    onSkipBack?: (index: number) => void;
    onVolumeUpdate?: (volume: number) => void;
    onBrightnessUpdate?: (brightness: number) => void;
    onMuteUpdate?: (muted: boolean) => void;
    onRepeatUpdate?: (repeat: boolean) => void;
    onSpeedUpdate?: (speed: PlaybackSpeed) => void;
    onPlayListItemSelect?: (index: number) => void;
    onScreenLockUpdate?: (locked: boolean) => void;
    onReload?: (index?: number) => void;
    onLoad?: (index?: number) => void;
    onError?: (error: string) => void;
};
declare const NexenPlayer: React.ForwardRefExoticComponent<NexenPlayerProps & React.RefAttributes<NexenPlayerRef>>;
export default NexenPlayer;
