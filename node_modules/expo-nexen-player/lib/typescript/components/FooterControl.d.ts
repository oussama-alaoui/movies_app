import React from 'react';
import { Animated } from 'react-native';
import { IconTagViewState } from './IconTagView';
import type { NexenTheme } from '../utils/Theme';
import type { EdgeInsets, NexenConfig } from './NexenPlayer';
declare type FooterControlProps = {
    opacity: Animated.Value;
    marginBottom: Animated.Value;
    paused: boolean;
    isSeekable?: React.MutableRefObject<boolean>;
    isVolumeSeekable?: React.MutableRefObject<boolean>;
    fullScreen: boolean;
    locked: boolean;
    trackTime: number;
    cachedTrackTime: number;
    totalTrackTime: number;
    totalVolume: number;
    disablePlaylistAndSkip?: boolean;
    insets?: EdgeInsets;
    playerConfig?: NexenConfig;
    nexenTheme?: NexenTheme;
    onPlayPress?: () => void;
    onFullScreenPress?: () => void;
    onVolumePress?: () => void;
    onStopPress?: () => void;
    onReloadPress?: () => void;
    onFastForward?: () => void;
    onRewind?: () => void;
    onSkipNext?: () => void;
    onSkipBack?: () => void;
    onSeekStart?: (value: number, totalValue: number, position: number) => void;
    onSeekUpdate?: (value: number, totalValue: number, position: number) => void;
    onSeekEnd?: (value: number, totalValue: number, position: number) => void;
    onVolumeSeekStart?: (value: number, totalValue: number, position: number) => void;
    onVolumeSeekUpdate?: (value: number, totalValue: number, position: number) => void;
    onVolumeSeekEnd?: (value: number, totalValue: number, position: number) => void;
    onSlideStart?: () => void;
    onSlideEnd?: () => void;
    onReachedToStart?: () => void;
    onReachedToEnd?: () => void;
    onAspectRatioPress?: () => void;
};
export declare type FooterControlRef = {
    updateIconTagView: (newState: IconTagViewState) => void;
};
declare const _default: React.MemoExoticComponent<React.ForwardRefExoticComponent<FooterControlProps & React.RefAttributes<FooterControlRef>>>;
export default _default;
