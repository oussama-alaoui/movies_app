"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "ControlHideMode", {
  enumerable: true,
  get: function () {
    return _NexenPlayer.ControlHideMode;
  }
});
Object.defineProperty(exports, "EdgeInsets", {
  enumerable: true,
  get: function () {
    return _NexenPlayer.EdgeInsets;
  }
});
Object.defineProperty(exports, "LayoutMode", {
  enumerable: true,
  get: function () {
    return _NexenPlayer.LayoutMode;
  }
});
Object.defineProperty(exports, "NexenConfig", {
  enumerable: true,
  get: function () {
    return _NexenPlayer.NexenConfig;
  }
});
Object.defineProperty(exports, "NexenPlayerProps", {
  enumerable: true,
  get: function () {
    return _NexenPlayer.NexenPlayerProps;
  }
});
Object.defineProperty(exports, "NexenPlayerRef", {
  enumerable: true,
  get: function () {
    return _NexenPlayer.NexenPlayerRef;
  }
});
Object.defineProperty(exports, "NexenSource", {
  enumerable: true,
  get: function () {
    return _NexenPlayer.NexenSource;
  }
});
Object.defineProperty(exports, "NexenTheme", {
  enumerable: true,
  get: function () {
    return _Theme.NexenTheme;
  }
});
Object.defineProperty(exports, "PlayList", {
  enumerable: true,
  get: function () {
    return _NexenPlayer.PlayList;
  }
});
Object.defineProperty(exports, "PlayListItem", {
  enumerable: true,
  get: function () {
    return _NexenPlayer.PlayListItem;
  }
});
Object.defineProperty(exports, "PlaybackSpeed", {
  enumerable: true,
  get: function () {
    return _NexenPlayer.PlaybackSpeed;
  }
});
Object.defineProperty(exports, "ResizeMode", {
  enumerable: true,
  get: function () {
    return _NexenPlayer.ResizeMode;
  }
});
exports.default = void 0;

var _NexenPlayer = _interopRequireWildcard(require("./components/NexenPlayer"));

var _Theme = require("./utils/Theme");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var _default = _NexenPlayer.default;
exports.default = _default;
//# sourceMappingURL=index.js.map